{"version":3,"sources":["pages/HomePage.jsx","pages/DetailPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Meta","Card","clientID","process","HomePage","useLocation","state","oldPhotos","oldPage","oldScrollPosition","useState","loading","setLoading","photos","setPhotos","page","setPage","query","setQuery","scrollPosition","setScrollPosition","handleScroll","position","window","pageYOffset","useEffect","addEventListener","removeEventListener","length","scrollTo","fetchImages","a","urlPage","urlQuery","url","fetch","response","json","data","results","console","log","decriptionHandler","event","str","preventDefault","innerText","RegExp","test","open","innerHeight","scrollY","document","body","scrollHeight","className","style","marginBottom","marginTop","type","placeholder","value","width","onChange","e","target","onClick","map","image","index","to","id","hoverable","cover","src","urls","regular","alt","placement","title","user","social","portfolio_url","first_name","description","DetailPage","useNavigate","useParams","history","replaceState","App","exact","path","element","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a80b5cb4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport \"../App.css\";\r\nimport { Card, Button, Space, Skeleton, Spin, Tooltip } from \"antd\";\r\nconst { Meta } = Card;\r\nconst clientID = `?client_id=${process.env.REACT_APP_KEY}`;\r\nconst mainUrl = `https://api.unsplash.com/photos/`;\r\nconst searchUrl = `https://api.unsplash.com/search/photos/`;\r\n\r\nfunction HomePage() {\r\n    const location = useLocation()\r\n    const { oldPhotos, oldPage, oldScrollPosition } = location.state || {}\r\n    const [loading, setLoading] = useState(false);\r\n    const [photos, setPhotos] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [scrollPosition, setScrollPosition] = useState(0);\r\n\r\n    const handleScroll = () => {\r\n        const position = window.pageYOffset;\r\n        setScrollPosition(position);\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        oldPhotos && setPhotos(oldPhotos)\r\n        oldPage && setPage(oldPage)\r\n        oldScrollPosition && setScrollPosition(oldScrollPosition)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (oldPage !== page && (!oldPhotos || !photos || oldPhotos?.length <= photos?.length)) {\r\n            fetchImages();\r\n        }\r\n        else {\r\n            setScrollPosition(oldScrollPosition);\r\n            if (oldScrollPosition === scrollPosition) {\r\n                window.scrollTo(0, oldScrollPosition);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [page]);\r\n\r\n    const fetchImages = async () => {\r\n        setLoading(true);\r\n        let url;\r\n        const urlPage = `&page=${page}`;\r\n        const urlQuery = `&query=${query}`;\r\n        if (query) {\r\n            url = `${searchUrl}${clientID}${urlPage}${urlQuery}`;\r\n        } else {\r\n            url = `${mainUrl}${clientID}${urlPage}`;\r\n        }\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setPhotos((oldPhotos) => {\r\n                if (query && page === 1) {\r\n                    return data.results;\r\n                } else if (query) {\r\n                    return [...oldPhotos, ...data.results];\r\n                } else {\r\n                    return [...oldPhotos, ...data];\r\n                }\r\n            });\r\n            // setData((oldPhotos) => {\r\n            //     if (query && page === 1) {\r\n            //         return data.results;\r\n            //     } else if (query) {\r\n            //         return [...oldPhotos, ...data.results];\r\n            //     } else {\r\n            //         return [...oldPhotos, ...data];\r\n            //     }\r\n            // });\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const event = window.addEventListener(\"scroll\", () => {\r\n            if (\r\n                (!loading && window.innerHeight + window.scrollY) >=\r\n                document.body.scrollHeight - 2\r\n            ) {\r\n                setPage((oldPage) => {\r\n                    return oldPage + 1;\r\n                });\r\n            }\r\n        });\r\n        return () => window.removeEventListener(\"scroll\", event);\r\n    }, []);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setPage(1);\r\n    };\r\n    function validURL(str) {\r\n        var pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        return !!pattern.test(str);\r\n    }\r\n    function decriptionHandler(event) {\r\n        event.preventDefault();\r\n        const validateUrl = validURL(event['target'].innerText)\r\n        if (validateUrl) {\r\n            window.open(event['target'].innerText, '_blank')\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <Space className=\"row inputBox\" style={{ marginBottom: 16, marginTop: 10 }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search Images\"\r\n                    value={query}\r\n                    style={{ width: 270 }}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                    className=\"form-control\"\r\n                />\r\n                <Button type=\"primary\" onClick={handleSubmit}>\r\n                    Search\r\n                </Button>\r\n            </Space>\r\n            <div className=\"row\">\r\n                {photos.map((image, index) => (\r\n                    <div key={index} className=\"col-md-4\">\r\n                        <Link to={`/infiniteScrolling/DetailsPage/${image.id}`} state={{ data: image, photos, page, scrollPosition }} >\r\n                            <Card\r\n                                className=\"antd-card\"\r\n                                hoverable\r\n                                cover={\r\n                                    <img\r\n                                        src={image.urls.regular}\r\n                                        alt=\"pic\"\r\n\r\n                                    />\r\n                                }\r\n                            >\r\n                                <Tooltip placement=\"bottomLeft\"\r\n                                    title={image.user.social.portfolio_url\r\n                                        ? image.user.social.portfolio_url\r\n                                        : \"No url present\"}\r\n                                >\r\n                                    <Meta onClick={decriptionHandler}\r\n                                        title={image.user.first_name\r\n                                            ? image.user.first_name\r\n                                            : \"No name present\"}\r\n                                        description={image.user.social.portfolio_url\r\n                                            ? image.user.social.portfolio_url\r\n                                            : \"No url present\"}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Card>\r\n                        </Link>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from 'antd';\r\n\r\nimport { Link, useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport \"../App.css\";\r\n\r\nfunction DetailPage() {\r\n    let navigate = useNavigate();\r\n    const { id } = useParams();\r\n    const location = useLocation()\r\n    const { data, photos, page, scrollPosition } = location.state\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            window.history.replaceState({}, document.title)\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row detailsPage-main\">\r\n                <div className=\"goBack\">\r\n                    <Link to={'/infiniteScrolling'} state={{ oldPhotos: photos, oldPage: page, oldScrollPosition: scrollPosition }} >\r\n                        <Button type=\"primary\">go back</Button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"details-image\">\r\n                    <img\r\n                        src={data.urls.regular}\r\n                        alt=\"pic\"\r\n                        className=\"detailsPage-image\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default DetailPage;\r\n","import { React, useState } from \"react\";\r\nimport { BrowserRouter as Router, HashRouter, Route, Routes, Navigate } from \"react-router-dom\";\r\n\r\nimport HomePage from './pages/HomePage'\r\nimport DetailPage from './pages/DetailPage'\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (<>\r\n    <HashRouter>\r\n      <Routes>\r\n        <Route\r\n          exact\r\n          path=\"/infiniteScrolling\"\r\n          element={<HomePage />} />\r\n        <Route\r\n          path=\"/infiniteScrolling/DetailsPage/:id\"\r\n          element={<DetailPage />} />\r\n        <Route\r\n          path=\"*\"\r\n          element={<Navigate to=\"/infiniteScrolling\" replace />}\r\n        />\r\n      </Routes>\r\n    </HashRouter>\r\n  </>)\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport \"antd/dist/antd.css\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}