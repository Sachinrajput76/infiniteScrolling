{"version":3,"sources":["pages/HomePage.jsx","pages/DetailPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Meta","Card","clientID","process","HomePage","useState","loading","setLoading","photos","setPhotos","page","setPage","query","setQuery","useEffect","fetchImages","a","urlPage","urlQuery","url","fetch","response","json","data","oldPhotos","console","log","results","decriptionHandler","event","preventDefault","str","validateUrl","innerText","RegExp","test","window","open","addEventListener","innerHeight","scrollY","document","body","scrollHeight","oldPage","removeEventListener","className","style","marginBottom","marginTop","type","placeholder","value","width","onChange","e","target","onClick","map","image","index","to","id","state","hoverable","cover","src","urls","regular","alt","title","user","first_name","description","social","portfolio_url","DetailPage","navigate","useNavigate","useParams","useLocation","App","exact","path","element","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.089f6278.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport \"../App.css\";\r\nimport { Card, Button, Space, Skeleton, Spin } from \"antd\";\r\nconst { Meta } = Card;\r\nconst clientID = `?client_id=${process.env.REACT_APP_KEY}`;\r\nconst mainUrl = `https://api.unsplash.com/photos/`;\r\nconst searchUrl = `https://api.unsplash.com/search/photos/`;\r\n\r\nfunction HomePage() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [photos, setPhotos] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [query, setQuery] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        fetchImages();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [page]);\r\n\r\n    const fetchImages = async () => {\r\n        setLoading(true);\r\n        let url;\r\n        const urlPage = `&page=${page}`;\r\n        const urlQuery = `&query=${query}`;\r\n        if (query) {\r\n            url = `${searchUrl}${clientID}${urlPage}${urlQuery}`;\r\n        } else {\r\n            url = `${mainUrl}${clientID}${urlPage}`;\r\n        }\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setPhotos((oldPhotos) => {\r\n                console.log(\"data\", data)\r\n                if (query && page === 1) {\r\n                    return data.results;\r\n                } else if (query) {\r\n                    return [...oldPhotos, ...data.results];\r\n                } else {\r\n                    return [...oldPhotos, ...data];\r\n                }\r\n            });\r\n            // setData((oldPhotos) => {\r\n            //     if (query && page === 1) {\r\n            //         return data.results;\r\n            //     } else if (query) {\r\n            //         return [...oldPhotos, ...data.results];\r\n            //     } else {\r\n            //         return [...oldPhotos, ...data];\r\n            //     }\r\n            // });\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const event = window.addEventListener(\"scroll\", () => {\r\n            if (\r\n                (!loading && window.innerHeight + window.scrollY) >=\r\n                document.body.scrollHeight - 2\r\n            ) {\r\n                setPage((oldPage) => {\r\n                    return oldPage + 1;\r\n                });\r\n            }\r\n        });\r\n        return () => window.removeEventListener(\"scroll\", event);\r\n    }, []);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setPage(1);\r\n    };\r\n    function validURL(str) {\r\n        var pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        return !!pattern.test(str);\r\n    }\r\n    function decriptionHandler(event) {\r\n        event.preventDefault();\r\n        const validateUrl = validURL(event['target'].innerText)\r\n        console.log(\"validateUrl\", validateUrl)\r\n        if (validateUrl) {\r\n            window.open(event['target'].innerText, '_blank')\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <Space className=\"row inputBox\" style={{ marginBottom: 16, marginTop: 10 }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search Images\"\r\n                    value={query}\r\n                    style={{ width: 270 }}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                    className=\"form-control\"\r\n                />\r\n                <Button type=\"primary\" onClick={handleSubmit}>\r\n                    Search\r\n                </Button>\r\n            </Space>\r\n            <div className=\"row\">\r\n                {photos.map((image, index) => (\r\n                    <div key={index} className=\"col-md-4\">\r\n                        <Link to={`/infiniteScrolling/DetailsPage/${image.id}`} state={{ data: image }} >\r\n                            <Card\r\n                                className=\"antd-card\"\r\n                                hoverable\r\n                                cover={\r\n                                    <img\r\n                                        src={image.urls.regular}\r\n                                        alt=\"pic\"\r\n\r\n                                    />\r\n                                }\r\n                            >\r\n                                <Meta onClick={decriptionHandler} title={image.user.first_name ? image.user.first_name : \"No name present\"} description={image.user.social.portfolio_url ? image.user.social.portfolio_url : \"No url present\"} />\r\n                            </Card>\r\n                        </Link>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from 'antd';\r\n\r\nimport { Link, useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport \"../App.css\";\r\n\r\nfunction DetailPage() {\r\n    let navigate = useNavigate();\r\n    const { id } = useParams();\r\n    const location = useLocation()\r\n    const { data } = location.state\r\n    const [loading, setLoading] = useState(false);\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row detailsPage-main\">\r\n                <div className=\"goBack\">\r\n                    <Button type=\"primary\" onClick={() => navigate('/')}>go back</Button>\r\n                </div>\r\n                <div className=\"details-image\">\r\n                    <img\r\n                        src={data.urls.regular}\r\n                        alt=\"pic\"\r\n                        className=\"detailsPage-image\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default DetailPage;\r\n","import { React, useState } from \"react\";\r\nimport { BrowserRouter as Router, HashRouter, Route, Routes, Navigate } from \"react-router-dom\";\r\n\r\nimport HomePage from './pages/HomePage'\r\nimport DetailPage from './pages/DetailPage'\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (<>\r\n    <HashRouter>\r\n      <Routes>\r\n        <Route\r\n          exact\r\n          path=\"/infiniteScrolling\"\r\n          element={<HomePage />} />\r\n        <Route\r\n          path=\"/infiniteScrolling/DetailsPage/:id\"\r\n          element={<DetailPage />} />\r\n        <Route\r\n          path=\"*\"\r\n          element={<Navigate to=\"/infiniteScrolling\" replace />}\r\n        />\r\n      </Routes>\r\n    </HashRouter>\r\n  </>)\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport \"antd/dist/antd.css\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}